// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.1.0.0
//      SpecFlow Generator Version:2.0.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace MenuCycleIntegrationTests.MenuServiceIntegration.MealPeriods
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.1.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("Get Meal Period Tests")]
    public partial class GetMealPeriodTestsFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "GetMealPeriodTests.feature"
#line hidden
        
        [NUnit.Framework.TestFixtureSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Get Meal Period Tests", null, ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.TestFixtureTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void FeatureBackground()
        {
#line 3
#line 4
 testRunner.Given("the executable query \'select * FROM [SCNET_abokado].[dbo].[meal_period]\' is execu" +
                    "ted against Staging Database", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 5
 testRunner.And("the returned \'MealPeriods\' are stored in the scenario context", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 6
 testRunner.And("all \'MealPeriods\' related data are cleared from \'abokado\' database", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Get Multiple Meal Periods")]
        [NUnit.Framework.CategoryAttribute("InitiateWebDriver")]
        public virtual void GetMultipleMealPeriods()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Get Multiple Meal Periods", new string[] {
                        "InitiateWebDriver"});
#line 9
this.ScenarioSetup(scenarioInfo);
#line 3
this.FeatureBackground();
#line 10
 testRunner.Given("I am logged in to StarChef with username \'abokadoadmin\' and password \'1234\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 11
 testRunner.Given("the user navigates to the \'admin\' page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 12
 testRunner.And("the \'Meal Periods\' option is selected and its respective tab title \'MEAL PERIODS " +
                    "MANAGEMENT\' is displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name"});
            table1.AddRow(new string[] {
                        "ApiTestAutomationMealPeriod_001"});
            table1.AddRow(new string[] {
                        "ApiTestAutomationMealPeriod_002"});
#line 13
 testRunner.And("the following Meal Periods are added", ((string)(null)), table1, "And ");
#line 20
 testRunner.Given("The Starchef Menu Service API is accessed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 21
 testRunner.When("the \'teste2e\' issues a \'GET\' request against Menu Service for \'CEF3DA30-88E8-44C8" +
                    "-9CD7-D64DD37B8C43\' on \'MealPeriods\' \'\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 22
 testRunner.Then("No errors are returned by server", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name"});
            table2.AddRow(new string[] {
                        "ApiTestAutomationMealPeriod_001"});
            table2.AddRow(new string[] {
                        "ApiTestAutomationMealPeriod_002"});
#line 23
 testRunner.And("the response contains the following Meal Periods", ((string)(null)), table2, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Get a Single Meal Period with a Name filter")]
        [NUnit.Framework.CategoryAttribute("InitiateWebDriver")]
        public virtual void GetASingleMealPeriodWithANameFilter()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Get a Single Meal Period with a Name filter", new string[] {
                        "InitiateWebDriver"});
#line 30
this.ScenarioSetup(scenarioInfo);
#line 3
this.FeatureBackground();
#line 31
 testRunner.Given("I am logged in to StarChef with username \'abokadoadmin\' and password \'1234\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 32
 testRunner.Given("the user navigates to the \'admin\' page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 33
 testRunner.And("the \'Meal Periods\' option is selected and its respective tab title \'MEAL PERIODS " +
                    "MANAGEMENT\' is displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 34
 testRunner.And("the user adds a new meal period with name \'LFC\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 38
 testRunner.Given("The Starchef Menu Service API is accessed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 39
 testRunner.When("the \'teste2e\' issues a \'GET\' request against Menu Service for \'CEF3DA30-88E8-44C8" +
                    "-9CD7-D64DD37B8C43\' on \'MealPeriods\' \'?$filter=Name eq \'LFC\'\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 40
 testRunner.Then("No errors are returned by server", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name"});
            table3.AddRow(new string[] {
                        "LFC"});
#line 41
 testRunner.And("the response contains the following Meal Periods", ((string)(null)), table3, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Update a Single Meal Period")]
        [NUnit.Framework.CategoryAttribute("InitiateWebDriver")]
        public virtual void UpdateASingleMealPeriod()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Update a Single Meal Period", new string[] {
                        "InitiateWebDriver"});
#line 47
this.ScenarioSetup(scenarioInfo);
#line 3
this.FeatureBackground();
#line 48
 testRunner.Given("I am logged in to StarChef with username \'abokadoadmin\' and password \'1234\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 49
 testRunner.Given("the user navigates to the \'admin\' page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 50
 testRunner.And("the \'Meal Periods\' option is selected and its respective tab title \'MEAL PERIODS " +
                    "MANAGEMENT\' is displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 51
 testRunner.And("the user adds a new meal period with name \'Meal Period for Update\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 52
 testRunner.And("the user edits the description where meal period name is \'Meal Period for Update\'" +
                    " to \'Updated Meal Period\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 56
 testRunner.Given("The Starchef Menu Service API is accessed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 57
 testRunner.When("the \'teste2e\' issues a \'GET\' request against Menu Service for \'CEF3DA30-88E8-44C8" +
                    "-9CD7-D64DD37B8C43\' on \'MealPeriods\' \'\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 58
 testRunner.Then("No errors are returned by server", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name"});
            table4.AddRow(new string[] {
                        "Updated Meal Period"});
#line 59
 testRunner.And("the response contains the following Meal Periods", ((string)(null)), table4, "And ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
