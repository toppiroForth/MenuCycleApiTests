// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.1.0.0
//      SpecFlow Generator Version:2.0.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace MenuCycleApiTests_ci.MenuCycle.Features
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.1.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("MenuCycles")]
    public partial class MenuCyclesFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "GET-MenuCycle.feature"
#line hidden
        
        [NUnit.Framework.TestFixtureSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "MenuCycles", null, ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.TestFixtureTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("GET-MenuCycles collection properites")]
        [NUnit.Framework.CategoryAttribute("MenuCycle_Collection")]
        public virtual void GET_MenuCyclesCollectionProperites()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("GET-MenuCycles collection properites", new string[] {
                        "MenuCycle_Collection"});
#line 5
  this.ScenarioSetup(scenarioInfo);
#line 6
    testRunner.Given("user can access the MenuService API with userID \'pgreen\' and Org \'Fourth\' content" +
                    "Type \'application/vnd.siren+json\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 7
     testRunner.When("user issues \'GET\' request against the \'/MenuCycles\' and \'\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 8
      testRunner.And("the request is sent to the server", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 9
     testRunner.Then("No errors are returned by server", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "menuCycleId",
                        "name",
                        "description",
                        "parentId",
                        "isPublished",
                        "isMaster",
                        "nonServingDays"});
            table1.AddRow(new string[] {
                        "2",
                        "MenuCycle2",
                        "MC Desc2",
                        "0",
                        "False",
                        "True",
                        "0"});
            table1.AddRow(new string[] {
                        "3",
                        "MenuCycle3",
                        "MC Desc3",
                        "0",
                        "False",
                        "True",
                        "0"});
            table1.AddRow(new string[] {
                        "4",
                        "MenuCycle4",
                        "MC Desc4",
                        "0",
                        "False",
                        "True",
                        "0"});
            table1.AddRow(new string[] {
                        "6",
                        "MenuCycle6",
                        "MC Desc6",
                        "0",
                        "False",
                        "True",
                        "0"});
            table1.AddRow(new string[] {
                        "7",
                        "MenuCycle7",
                        "MC Desc7",
                        "0",
                        "False",
                        "True",
                        "0"});
            table1.AddRow(new string[] {
                        "8",
                        "MenuCycle8",
                        "MC Desc8",
                        "0",
                        "False",
                        "True",
                        "0"});
            table1.AddRow(new string[] {
                        "10",
                        "MenuCycle10",
                        "MC Desc10",
                        "0",
                        "False",
                        "True",
                        "0"});
            table1.AddRow(new string[] {
                        "12",
                        "MenuCycle12",
                        "MC Desc12",
                        "0",
                        "False",
                        "True",
                        "0"});
            table1.AddRow(new string[] {
                        "16",
                        "MenuCycle16",
                        "MC Desc16",
                        "0",
                        "False",
                        "True",
                        "0"});
            table1.AddRow(new string[] {
                        "17",
                        "MenuCycle17",
                        "MC Desc17",
                        "0",
                        "False",
                        "True",
                        "0"});
            table1.AddRow(new string[] {
                        "18",
                        "MenuCycle18",
                        "MC Desc18",
                        "0",
                        "False",
                        "True",
                        "0"});
            table1.AddRow(new string[] {
                        "20",
                        "MenuCycle20",
                        "MC Desc20",
                        "0",
                        "False",
                        "True",
                        "0"});
            table1.AddRow(new string[] {
                        "21",
                        "MenuCycle21",
                        "MC Desc21",
                        "0",
                        "False",
                        "True",
                        "0"});
            table1.AddRow(new string[] {
                        "22",
                        "MenuCycle22",
                        "MC Desc22",
                        "0",
                        "False",
                        "True",
                        "0"});
            table1.AddRow(new string[] {
                        "24",
                        "MenuCycle24",
                        "MC Desc24",
                        "0",
                        "False",
                        "True",
                        "0"});
            table1.AddRow(new string[] {
                        "26",
                        "MenuCycle26",
                        "MC Desc26",
                        "0",
                        "False",
                        "True",
                        "0"});
            table1.AddRow(new string[] {
                        "27",
                        "MenuCycle27",
                        "MC Desc27",
                        "0",
                        "False",
                        "True",
                        "0"});
            table1.AddRow(new string[] {
                        "30",
                        "dsafasd",
                        "rgerter",
                        "0",
                        "False",
                        "True",
                        "40"});
            table1.AddRow(new string[] {
                        "28",
                        "MenuCycle28",
                        "MC Desc28",
                        "0",
                        "False",
                        "True",
                        "0"});
            table1.AddRow(new string[] {
                        "33",
                        "MenuCycle33",
                        "MC Desc33",
                        "0",
                        "False",
                        "True",
                        "0"});
#line 10
      testRunner.And("the following MenuCycle propertie collection is returned by the server", ((string)(null)), table1, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("GET-SingleMenuCycle status Code and properties")]
        [NUnit.Framework.CategoryAttribute("MenuCycle_SingleMenuCycle")]
        public virtual void GET_SingleMenuCycleStatusCodeAndProperties()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("GET-SingleMenuCycle status Code and properties", new string[] {
                        "MenuCycle_SingleMenuCycle"});
#line 34
  this.ScenarioSetup(scenarioInfo);
#line 35
    testRunner.Given("user can access the MenuService API with userID \'pgreen\' and Org \'Fourth\' content" +
                    "Type \'application/vnd.siren+json\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 36
     testRunner.When("user issues \'GET\' request against the \'/MenuCycles\' and \'/23\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 37
      testRunner.And("the request is sent to the server", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 38
     testRunner.Then("No errors are returned by server", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "menuCycleId",
                        "name",
                        "description",
                        "parentId",
                        "isPublished",
                        "isMaster",
                        "nonServingDays"});
            table2.AddRow(new string[] {
                        "23",
                        "MenuCycle23",
                        "MC Desc23",
                        "0",
                        "False",
                        "True",
                        "0"});
#line 39
      testRunner.And("the following MenuCycle properites is returned", ((string)(null)), table2, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("GET-MenuCycle Entities")]
        [NUnit.Framework.CategoryAttribute("MenuCycle_Entities")]
        public virtual void GET_MenuCycleEntities()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("GET-MenuCycle Entities", new string[] {
                        "MenuCycle_Entities"});
#line 44
  this.ScenarioSetup(scenarioInfo);
#line 45
    testRunner.Given("user can access the MenuService API with userID \'pgreen\' and Org \'Fourth\' content" +
                    "Type \'application/vnd.siren+json\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 46
     testRunner.When("user issues \'GET\' request against the \'/MenuCycles\' and \'\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 47
      testRunner.And("the request is sent to the server", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 48
     testRunner.Then("No errors are returned by server", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "class",
                        "rel"});
            table3.AddRow(new string[] {
                        "MenuCycle",
                        "/rels/MenuCycle"});
#line 49
      testRunner.And("the following MenuCycle entities are returned", ((string)(null)), table3, "And ");
#line hidden
            TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                        "href",
                        "method",
                        "title",
                        "type"});
            table4.AddRow(new string[] {
                        "http://ci-menuservice.fourth.com//MenuCycles",
                        "GET",
                        "",
                        "application/vnd.siren+json;"});
            table4.AddRow(new string[] {
                        "http://ci-menuservice.fourth.com//MenuCycles?$skip=0&$top=20",
                        "GET",
                        "Current Page",
                        "application/vnd.siren+json;"});
            table4.AddRow(new string[] {
                        "http://ci-menuservice.fourth.com//MenuCycles?$skip=20&$top=20",
                        "GET",
                        "Next Page",
                        "application/vnd.siren+json;"});
            table4.AddRow(new string[] {
                        "http://ci-menuservice.fourth.com//MenuCycles?$skip=40&$top=20",
                        "GET",
                        "Last Page",
                        "application/vnd.siren+json;"});
#line 52
   testRunner.And("the follwing links are returned", ((string)(null)), table4, "And ");
#line hidden
            TechTalk.SpecFlow.Table table5 = new TechTalk.SpecFlow.Table(new string[] {
                        "href",
                        "method",
                        "title",
                        "type",
                        "name"});
            table5.AddRow(new string[] {
                        "http://ci-menuservice.fourth.com/MenuCycles",
                        "POST",
                        "Create a menu cycle",
                        "application/vnd.siren+json;",
                        "Create"});
#line 58
  testRunner.And("the following Actions are returned", ((string)(null)), table5, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("GET-MenuCycle NotFound")]
        [NUnit.Framework.CategoryAttribute("MenuCycle_NotFound")]
        public virtual void GET_MenuCycleNotFound()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("GET-MenuCycle NotFound", new string[] {
                        "MenuCycle_NotFound"});
#line 64
  this.ScenarioSetup(scenarioInfo);
#line 65
    testRunner.Given("user can access the MenuService API with userID \'pgreen\' and Org \'Fourth\' content" +
                    "Type \'application/vnd.siren+json\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 66
     testRunner.When("user issues \'GET\' request against the \'/MenuCycles\' and \'/110\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 67
      testRunner.And("the request is sent to the server", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 68
     testRunner.Then("No record found exception returned by server", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
