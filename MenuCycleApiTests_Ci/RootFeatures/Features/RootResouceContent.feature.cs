// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.1.0.0
//      SpecFlow Generator Version:2.0.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace MenuCycleApiTests_ci.RootFeatures.Features
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.1.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("Root Resource Content")]
    [NUnit.Framework.CategoryAttribute("RootSource")]
    public partial class RootResourceContentFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "RootResouceContent.feature"
#line hidden
        
        [NUnit.Framework.TestFixtureSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Root Resource Content", null, ProgrammingLanguage.CSharp, new string[] {
                        "RootSource"});
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.TestFixtureTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Root Resource")]
        [NUnit.Framework.CategoryAttribute("Root_Resource")]
        public virtual void RootResource()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Root Resource", new string[] {
                        "Root_Resource"});
#line 6
  this.ScenarioSetup(scenarioInfo);
#line 7
      testRunner.Given("user can access the MenuService API with userID \'AutomationTestUser1\' and Org \'or" +
                    "ganisationName\' contentType \'application/vnd.siren+json\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 8
     testRunner.When("user issues \'GET\' request against the \'\' and \'\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 9
  testRunner.When("the request is sent to the server", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 10
     testRunner.Then("No errors are returned by server", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "userID",
                        "organisationID"});
            table1.AddRow(new string[] {
                        "AutomationTestUser1",
                        "organisationName"});
#line 11
  testRunner.And("the following root properites are returned", ((string)(null)), table1, "And ");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "Class",
                        "rel",
                        "href"});
            table2.AddRow(new string[] {
                        "Menu Cycles",
                        "/rels/menucycles",
                        "http://ci-menuservice.fourth.com/MenuCycles"});
            table2.AddRow(new string[] {
                        "Meal Periods",
                        "/rels/mealperiods",
                        "http://ci-menuservice.fourth.com/MealPeriods"});
            table2.AddRow(new string[] {
                        "Menus",
                        "/rels/menus",
                        "http://ci-menuservice.fourth.com/Menus"});
            table2.AddRow(new string[] {
                        "Recipes",
                        "/rels/recipes",
                        "http://ci-menuservice.fourth.com/Recipes"});
            table2.AddRow(new string[] {
                        "Locations",
                        "/rels/locations",
                        "http://ci-menuservice.fourth.com/Locations"});
            table2.AddRow(new string[] {
                        "Groups",
                        "/rels/groups",
                        "http://ci-menuservice.fourth.com/Groups"});
            table2.AddRow(new string[] {
                        "Tariffs",
                        "/rels/tariffs",
                        "http://ci-menuservice.fourth.com/Tariffs"});
            table2.AddRow(new string[] {
                        "SellPriceModels",
                        "/rels/sellpricemodels",
                        "http://ci-menuservice.fourth.com/SellPriceModels"});
#line 14
  testRunner.And("the following root entities are returned", ((string)(null)), table2, "And ");
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "href"});
            table3.AddRow(new string[] {
                        "http://ci-menuservice.fourth.com/"});
#line 24
   testRunner.And("the follwing links are returned", ((string)(null)), table3, "And ");
#line hidden
            TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                        "method",
                        "title",
                        "type"});
            table4.AddRow(new string[] {
                        "GET",
                        "Root",
                        "application/vnd.siren+json;"});
#line 27
      testRunner.And("the follwing links properties are returned", ((string)(null)), table4, "And ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
