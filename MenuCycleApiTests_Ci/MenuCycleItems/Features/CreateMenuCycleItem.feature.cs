// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.1.0.0
//      SpecFlow Generator Version:2.0.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace MenuCycleApiTests_ci.MenuCycleItems.Features
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.1.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("CreateMenuCycleItem")]
    public partial class CreateMenuCycleItemFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "CreateMenuCycleItem.feature"
#line hidden
        
        [NUnit.Framework.TestFixtureSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "CreateMenuCycleItem", null, ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.TestFixtureTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void FeatureBackground()
        {
#line 3
  #line 4
    testRunner.Given("the executable Menuservice stored procedure \'sp_delete_menucycle_by_customer_id\' " +
                    "with id \'39\' is executed against Staging Database", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("POST- MenuCycleItem with Manu")]
        [NUnit.Framework.CategoryAttribute("MenuCycle_Create_a_MenuCycleItem")]
        public virtual void POST_MenuCycleItemWithManu()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("POST- MenuCycleItem with Manu", new string[] {
                        "MenuCycle_Create_a_MenuCycleItem"});
#line 7
  this.ScenarioSetup(scenarioInfo);
#line 3
  this.FeatureBackground();
#line 8
    testRunner.Given("user can access the MenuService API with userID \'AutomationTestUser1\' and Org \'or" +
                    "ganisationName\' contentType \'application/vnd.siren+json\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 9
     testRunner.When("user issues \'POST\' request against the \'/MenuCycles\' and \'\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 10
     testRunner.And("the \'single\' group \'95\' and \'96\' request sent to server", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 11
     testRunner.Then("No errors are returned by server", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 12
      testRunner.And("user should get the last menuCycleId from response", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 13
    testRunner.Given("user can access the MenuService API with userID \'AutomationTestUser1\' and Org \'or" +
                    "ganisationName\' contentType \'application/vnd.siren+json\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 14
     testRunner.When("user issues \'POST\' request against a menucycle \'/MenuCycles/\' and \'/items\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 15
      testRunner.And("Item request contains mealpriod 39 and the \'Menu\' with id 94", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 16
     testRunner.Then("No errors are returned by server", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 17
      testRunner.And("user can get one of the menucycleitemid", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 18
     testRunner.When("user issues \'DELETE\' request against a menucycleitem \'/MenuCycles/\' and \'/items\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 19
      testRunner.And("the request is sent to the server", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 20
     testRunner.Then("No errors are returned by server", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("POST- MenuCycleItem with Recipe")]
        [NUnit.Framework.CategoryAttribute("MenuCycle_Create_a_MenuCycleItem")]
        public virtual void POST_MenuCycleItemWithRecipe()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("POST- MenuCycleItem with Recipe", new string[] {
                        "MenuCycle_Create_a_MenuCycleItem"});
#line 23
  this.ScenarioSetup(scenarioInfo);
#line 3
  this.FeatureBackground();
#line 24
    testRunner.Given("user can access the MenuService API with userID \'AutomationTestUser1\' and Org \'or" +
                    "ganisationName\' contentType \'application/vnd.siren+json\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 25
     testRunner.When("user issues \'POST\' request against the \'/MenuCycles\' and \'\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 26
      testRunner.And("the \'single\' group \'95\' and \'96\' request sent to server", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 27
     testRunner.Then("No errors are returned by server", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 28
      testRunner.And("user should get the last menuCycleId from response", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 29
    testRunner.Given("user can access the MenuService API with userID \'AutomationTestUser1\' and Org \'or" +
                    "ganisationName\' contentType \'application/vnd.siren+json\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 30
     testRunner.When("user issues \'POST\' request against a menucycle \'/MenuCycles/\' and \'/items\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 31
      testRunner.And("Item request contains mealpriod 39 and the \'Recipe\' with id 898", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 32
     testRunner.Then("No errors are returned by server", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 33
      testRunner.And("user can get one of the menucycleitemid", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 34
     testRunner.When("user issues \'DELETE\' request against a menucycleitem \'/MenuCycles/\' and \'/items\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 35
      testRunner.And("the request is sent to the server", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 36
     testRunner.Then("No errors are returned by server", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("POST- MenuCycleItem with Manu and recipe")]
        [NUnit.Framework.CategoryAttribute("MenuCycle_Create_a_MenuCycleItem")]
        public virtual void POST_MenuCycleItemWithManuAndRecipe()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("POST- MenuCycleItem with Manu and recipe", new string[] {
                        "MenuCycle_Create_a_MenuCycleItem"});
#line 40
  this.ScenarioSetup(scenarioInfo);
#line 3
  this.FeatureBackground();
#line 41
    testRunner.Given("user can access the MenuService API with userID \'AutomationTestUser1\' and Org \'or" +
                    "ganisationName\' contentType \'application/vnd.siren+json\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 42
     testRunner.When("user issues \'POST\' request against the \'/MenuCycles\' and \'\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 43
      testRunner.And("the \'single\' group \'95\' and \'96\' request sent to server", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 44
     testRunner.Then("No errors are returned by server", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 45
      testRunner.And("user should get the last menuCycleId from response", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 46
    testRunner.Given("user can access the MenuService API with userID \'AutomationTestUser1\' and Org \'or" +
                    "ganisationName\' contentType \'application/vnd.siren+json\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 47
     testRunner.When("user issues \'POST\' request against a menucycle \'/MenuCycles/\' and \'/items\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 48
      testRunner.And("Item request contains mealpriod 39 and the \'MenuRecipe\' with mneu id 94 recipeid " +
                    "898", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 49
     testRunner.Then("No errors are returned by server", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 50
      testRunner.And("user can get one of the menucycleitemid", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 51
     testRunner.When("user issues \'DELETE\' request against a menucycleitem \'/MenuCycles/\' and \'/items\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 52
      testRunner.And("the request is sent to the server", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 53
     testRunner.Then("No errors are returned by server", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 55
     testRunner.When("user issues \'DELETE\' request against a menucycleitem \'/MenuCycles/\' and \'/items\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 56
      testRunner.And("the request is sent to the server", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 57
     testRunner.Then("Not Found response returen by server", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
