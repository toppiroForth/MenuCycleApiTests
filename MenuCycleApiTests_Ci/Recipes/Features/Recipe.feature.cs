// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.1.0.0
//      SpecFlow Generator Version:2.0.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace MenuCycleApiTests_ci.Recipes.Features
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.1.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("GetRecipes")]
    public partial class GetRecipesFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "Recipe.feature"
#line hidden
        
        [NUnit.Framework.TestFixtureSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "GetRecipes", null, ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.TestFixtureTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("GET Recipes")]
        [NUnit.Framework.CategoryAttribute("mytag")]
        public virtual void GETRecipes()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("GET Recipes", new string[] {
                        "mytag"});
#line 4
  this.ScenarioSetup(scenarioInfo);
#line 5
    testRunner.Given("user can access the MenuService API with userID \'AutomationTestUser1\' and Org \'or" +
                    "ganisationName\' contentType \'application/vnd.siren+json\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 6
     testRunner.When("user issues \'GET\' request against the \'/recipes\' and \'\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 7
      testRunner.And("the request is sent to the server", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 8
     testRunner.Then("No errors are returned by server", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 9
   testRunner.And("user should get the first recipeId from response", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "name"});
            table1.AddRow(new string[] {
                        "AutoRecipe001"});
            table1.AddRow(new string[] {
                        "AutoRecipe002"});
            table1.AddRow(new string[] {
                        "AutoRecipe003"});
            table1.AddRow(new string[] {
                        "AutoRecipe004"});
#line 10
   testRunner.And("the following recipes propertie collection is returned by the server", ((string)(null)), table1, "And ");
#line 16
      testRunner.And("the following entities class \'Recipe\' and rel \'/rels/recipe\'are returned", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "href",
                        "method",
                        "title",
                        "type"});
            table2.AddRow(new string[] {
                        "http://ci-menuservice.fourth.com/recipes",
                        "GET",
                        "",
                        "application/vnd.siren+json;"});
#line 17
      testRunner.And("the follwing links are returned", ((string)(null)), table2, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("GET Single Recipe")]
        [NUnit.Framework.CategoryAttribute("SingeMealPeriod")]
        public virtual void GETSingleRecipe()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("GET Single Recipe", new string[] {
                        "SingeMealPeriod"});
#line 22
  this.ScenarioSetup(scenarioInfo);
#line 23
    testRunner.Given("user can access the MenuService API with userID \'AutomationTestUser1\' and Org \'or" +
                    "ganisationName\' contentType \'application/vnd.siren+json\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 24
     testRunner.When("user issues \'GET\' request against the \'/recipes\' and \'\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 25
      testRunner.And("the request is sent to the server", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 26
     testRunner.Then("No errors are returned by server", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 27
   testRunner.And("user should get the first recipeId from response", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 28
    testRunner.Given("user can access the MenuService API with userID \'AutomationTestUser1\' and Org \'or" +
                    "ganisationName\' contentType \'application/vnd.siren+json\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 29
  testRunner.When("user issues \'GET\' request against the single \'/recipes/\' and \'\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 30
      testRunner.And("the request is sent to the server", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 31
     testRunner.Then("No errors are returned by server", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "name",
                        "costUnitOfMeasure"});
            table3.AddRow(new string[] {
                        "AutoRecipe001",
                        "myC"});
#line 32
   testRunner.And("the following single recipe properties are returned", ((string)(null)), table3, "And ");
#line hidden
            TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                        "href"});
            table4.AddRow(new string[] {
                        "http://ci-menuservice.fourth.com/Recipes/{0}"});
            table4.AddRow(new string[] {
                        "http://ci-menuservice.fourth.com/Recipes"});
#line 35
      testRunner.And("the following \'href\' links returned for single recipe", ((string)(null)), table4, "And ");
#line hidden
            TechTalk.SpecFlow.Table table5 = new TechTalk.SpecFlow.Table(new string[] {
                        "method",
                        "title",
                        "type"});
            table5.AddRow(new string[] {
                        "GET",
                        "Recipe",
                        "application/vnd.siren+json;"});
            table5.AddRow(new string[] {
                        "GET",
                        "Recipes",
                        "application/vnd.siren+json;"});
            table5.AddRow(new string[] {
                        "GET",
                        "Recipe information",
                        "application/vnd.siren+json;"});
            table5.AddRow(new string[] {
                        "GET",
                        "Nutrition information",
                        "application/vnd.siren+json;"});
            table5.AddRow(new string[] {
                        "GET",
                        "Ingredient information",
                        "application/vnd.siren+json;"});
            table5.AddRow(new string[] {
                        "GET",
                        "Intolerance information",
                        "application/vnd.siren+json;"});
            table5.AddRow(new string[] {
                        "GET",
                        "Preparation information",
                        "application/vnd.siren+json;"});
            table5.AddRow(new string[] {
                        "GET",
                        "TrafficLight information",
                        "application/vnd.siren+json;"});
#line 39
      testRunner.And("the follwing links properties are returned", ((string)(null)), table5, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("GET Recipe groups")]
        [NUnit.Framework.CategoryAttribute("recipeGroups")]
        public virtual void GETRecipeGroups()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("GET Recipe groups", new string[] {
                        "recipeGroups"});
#line 52
      this.ScenarioSetup(scenarioInfo);
#line 53
    testRunner.Given("user can access the MenuService API with userID \'AutomationTestUser1\' and Org \'or" +
                    "ganisationName\' contentType \'application/vnd.siren+json\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 54
     testRunner.When("user issues \'GET\' request against the \'/recipes\' and \'\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 55
      testRunner.And("the request is sent to the server", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 56
     testRunner.Then("No errors are returned by server", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 57
   testRunner.And("user should get the first recipeId from response", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 58
 testRunner.Given("user can access the MenuService API with userID \'AutomationTestUser1\' and Org \'or" +
                    "ganisationName\' contentType \'application/vnd.siren+json\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 59
  testRunner.When("user issues \'GET\' request against the single \'/recipes/\' and \'/Groups\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 60
   testRunner.And("the request is sent to the server", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 61
     testRunner.Then("No errors are returned by server", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table6 = new TechTalk.SpecFlow.Table(new string[] {
                        "name"});
            table6.AddRow(new string[] {
                        "Group One"});
#line 62
   testRunner.And("the following Group propertie collection is returned by the server", ((string)(null)), table6, "And ");
#line hidden
            TechTalk.SpecFlow.Table table7 = new TechTalk.SpecFlow.Table(new string[] {
                        "class",
                        "rel"});
            table7.AddRow(new string[] {
                        "Group",
                        "/rels/group"});
#line 65
     testRunner.And("the following entities class and rel are returned", ((string)(null)), table7, "And ");
#line hidden
            TechTalk.SpecFlow.Table table8 = new TechTalk.SpecFlow.Table(new string[] {
                        "href",
                        "method",
                        "title",
                        "type"});
            table8.AddRow(new string[] {
                        "http://ci-menuservice.fourth.com//Groups",
                        "GET",
                        "",
                        "application/vnd.siren+json;"});
#line 68
   testRunner.And("the follwing links properties are returned", ((string)(null)), table8, "And ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
